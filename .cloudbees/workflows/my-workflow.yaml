apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My automation
on:
  push:
    branches:
      - "**"
jobs:
  test-actions:
    environment: development
    steps:
      - uses: cloudbees-io/checkout@v1
        name: checkout
        with:
          provider: github
          repository: Poseidon1979/simple-java-maven-app
          ref: master
          token: ${{secrets.PYANG_GITHUB_TOKEN}}
          path: ./simple_java_app/
          github-server-url: https://github.com
      - uses: cloudbees-pyang/platform-action-maven@v0.2
        name: build
        with:
          project-folder: ./simple_java_app/
      - uses: cloudbees-io/configure-oci-credentials@v1
        name: Setup Docker Hub Registry
        with:
          registry: index.docker.io
          username: ${{ vars.PYANG_DOCKER_USERNAME }}
          password: ${{ secrets.PYANG_DOCKER_PASSWORD }}
      - uses: cloudbees-io/kaniko@v1
        name: containerize
        with:
          dockerfile: ./simple_java_app/Dockerfile
          context: ./simple_java_app
          destination: poseidon1979/myapp:1.0
      - uses: cloudbees-pyang/platform-action-yaml-generator@v0.17
        name: create deployment object
        id: yaml-generator
        with:
          folder: ./simple_java_app/
          name: myapp
          image: poseidon1979/myapp:1.0
      - uses: cloudbees-io/configure-aws-credentials@v1
        name: aws login
        with:
          aws-access-key-id: ${{ vars.PYANG_SERVICE_ACCOUNT_ID }}
          aws-secret-access-key: ${{ secrets.PYANG_SERVICE_ACCOUNT_KEY }}
          aws-region: us-east-1
      - uses: cloudbees-pyang/platform-action-gke-login@v0.14
        name: login in to gke
        with:
          service-account: ${{vars.PYANG_GCP_SERVICE_ACCOUNT}}
          key-file: ./test.json
          project: ${{vars.PYANG_GCP_PROJECT}}
          cluster-name: ${{ vars.PYANG_GCP_CLUSTER_NAME}}
          zone: europe-west1-d
      - uses: docker://poseidon1979/gcloud-kubectl-image:latest
        name: deploy
        run: |
          kubectl apply -f ./simple_java_app/myapp.yaml
